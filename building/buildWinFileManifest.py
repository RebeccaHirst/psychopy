# Generate a list of top-level files and folders to be included in the 
# uninstaller section of the NSIS script. This script should be run prior to 
# building the installer. The output is written to 'uninstallFiles.nsi' or the 
# file specified by the environment variable NSIS_UNINSTALL_INCLUDE.
# 
# usage: python buildWinFileManifest.py [root]

import os
from pathlib import Path
import argparse

thisFolder = Path(__file__).parent

# parse args for input folder as NSIS_SOURCE_ROOT
parser = argparse.ArgumentParser()
parser.add_argument('root', help='Folder to search for files to include in uninstaller')
args = parser.parse_args()
NSIS_SOURCE_ROOT = args.root
if not os.path.isdir(NSIS_SOURCE_ROOT):
    NSIS_SOURCE_ROOT = os.getenv('NSIS_SOURCE_ROOT', thisFolder)

NSIS_UNINSTALL_INCLUDE = os.getenv(
    'NSIS_UNINSTALL_INCLUDE', 'uninstallFiles.nsi')

# Create a list of top-level files and folders to be included in the
# uninstaller section of the NSIS. The output is written to the file
# specified by the environment variable `NSIS_UNINSTALL_INCLUDE`

print('Building include file for uninstall routine...')

# get top-level files and folders only, not recursive
topLevelFiles = []
topLevelFolders = []
for item in Path(NSIS_SOURCE_ROOT).iterdir():
    if item.is_file():
        topLevelFiles.append(item.relative_to(NSIS_SOURCE_ROOT))
    elif item.is_dir():
        topLevelFolders.append(item.relative_to(NSIS_SOURCE_ROOT)))

print(f'Found {len(topLevelFiles)} files and {len(topLevelFolders)} folders in '
      f'installation directory to mark for deletion during uninstall')

# write out each file to the uninstaller include file
with open(NSIS_UNINSTALL_INCLUDE, 'w') as f:
    f.write(
        ";=========== Uninstaller Data please do not edit this file ===========\n")
    for item in topLevelFolders:
        f.write(f'RMDir /r "$INSTDIR\{item}"\n')
    for item in topLevelFiles:
        f.write(f'Delete "$INSTDIR\{item}"\n')
    f.write('\n')

print(f'Uninstaller include file written to "{NSIS_UNINSTALL_INCLUDE}"')